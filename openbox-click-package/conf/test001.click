 require(package "openbox");
    ChatterSocket("TCP", 10002, RETRIES 3, RETRY_WARNINGS false, CHANNEL openbox);
    ControlSocket("TCP", 10001, RETRIES 3, RETRY_WARNINGS false);
    SetTimestamp_StringMatcher_FakeApp@_@set_timestamp::SetTimestamp();
    StringMatcher_FakeApp@_@string_matcher::StringClassifier("discover",MATCHER wumanber);
    StringMatcher_FakeApp@_@counter::MultiCounter();
    Guard_StringMatcher_FakeApp@_@utilization_monitor::UtilizationMonitor(WINDOW 100, PROC_THRESHOLD 2.0);
    FromDevice_FakeApp@_@from_device::FromDump(/home/mininet/test_discover, STOP true);
    FromDevice_FakeApp@_@mark_ip_header::AutoMarkIPHeader();
    FromDevice_FakeApp@_@counter::Counter();
    Classify_FakeApp@_@counter::MultiCounter();
    Classify_FakeApp@_@classifier::Classifier(14/05%0f 36/0016, -);
    Alert_Fake@_@push_message::PushMessage(ALERT, "{\"message\": \"Alert from Fake\", \"origin_block\": \"Alert_Fake\", \"severity\": 1, \"packet\": \"%s\"}", CHANNEL openbox, ATTACH_PACKET true, PACKET_SIZE 1000);
    ToDump1_FakeApp@_@to_dump::ToDump(/home/mininet/hello_ssh.pcap, UNBUFFERED true);
    ToDump2_FakeApp@_@to_dump::ToDump(/home/mininet/hello_rest.pcap, UNBUFFERED true);
    ToDump3_FakeApp@_@to_dump::ToDump(/home/mininet/hello_malicious.pcap, UNBUFFERED true);
    StringMatcher_FakeApp@_@string_matcher[0]->[0]StringMatcher_FakeApp@_@counter;
    StringMatcher_FakeApp@_@string_matcher[1]->[1]StringMatcher_FakeApp@_@counter;
    FromDevice_FakeApp@_@from_device[0]->[0]FromDevice_FakeApp@_@mark_ip_header;
    FromDevice_FakeApp@_@mark_ip_header[0]->[0]FromDevice_FakeApp@_@counter;
    Classify_FakeApp@_@classifier[0]->[0]Classify_FakeApp@_@counter;
    Classify_FakeApp@_@classifier[1]->[1]Classify_FakeApp@_@counter;
    SetTimestamp_StringMatcher_FakeApp@_@set_timestamp[0]->[0]StringMatcher_FakeApp@_@string_matcher;
    StringMatcher_FakeApp@_@counter[0]->[0]Guard_StringMatcher_FakeApp@_@utilization_monitor;
    StringMatcher_FakeApp@_@counter[1]->[1]Guard_StringMatcher_FakeApp@_@utilization_monitor;
    FromDevice_FakeApp@_@counter[0]->[0]Classify_FakeApp@_@classifier;
    Classify_FakeApp@_@counter[0]->[0]ToDump1_FakeApp@_@to_dump;
    Classify_FakeApp@_@counter[1]->[0]SetTimestamp_StringMatcher_FakeApp@_@set_timestamp;
    Guard_StringMatcher_FakeApp@_@utilization_monitor[1]->[0]Alert_Fake@_@push_message;
    Guard_StringMatcher_FakeApp@_@utilization_monitor[0]->[0]ToDump2_FakeApp@_@to_dump;
    Alert_Fake@_@push_message[0]->[0]ToDump3_FakeApp@_@to_dump;
